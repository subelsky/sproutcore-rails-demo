NOTE: Firebug or webkit inspector

rails -v # 2.3.2
sproutcore -v # 0.9.23
sudo gem install sqlite3-ruby --no-ri --no-rdoc

rails cookbook
cd cookbook
rake db:create:all
script/server
visit http://localhost:3000/

script/generate resource recipe name:string prep_time:integer cook_time:integer

replace recipes.yml with
  one:
    name: "Macaroni and Cheese"
    prep_time: 5
    cook_time: 10

  two:
    name: "Duck l'Orange"
    prep_time: 30
    cook_time: 2400

rake db:create db:migrate db:fixtures:load   

mkdir app/presenters

create app/presenters/recipe_presenter.rb

	class RecipePresenter
  
	  def initialize(params = {})
	  end

	  def to_hash
	    { :records => records, :ids => recipe_ids }
	  end

	  private

	  def recipes
	    @recipes ||= Recipe.find(:all)
	  end

	  def recipe_ids
	    @recipe_ids ||= recipes.collect { |r| r.id }
	  end
  
	  def records
	    unless @records
	      @records = recipes.map do |recipe|
	        recipe.attributes.merge(:guid => recipe.id, :type => "Recipe")
	      end
	    end
	    return @records
	  end
  
	end

in the config block for environment.rb
	  config.load_paths << "#{RAILS_ROOT}/app/presenters"

Open console
	type RecipePresenter.new.to_hash
	
Add to recipes controller:

  def index
    render :text => RecipePresenter.new.to_hash.to_json
  end

restart server

visit http://localhost:3000/recipes

sc-init cookbook
cd cookbook
sc-server

in browser check http://localhost:4020/cookbook

sc-gen model cookbook/recipe

add to fixtures/recipe.js

  { guid: 1,
    name: "Peanut Butter and Jelly",
    type: 'Recipe',
    prep_time: 3,
    cook_time: 0
    },
  
  { guid: 2,
    name: "Vegetable Korma",
    type: 'Recipe',
    prep_time: 45,
    cook_time: 35
    }

reload browser
Cookbook.Recipe.find(1).get('name')
Cookbook.Recipe.find(2).get('name')

change core.js
  server: SC.RailsServer.create({ prefix: ['Cookbook'] }),

add to core.js
  localMode: window.location.hash === '#development',

add to recipe model

  dataSource: Cookbook.server,
  resourceURL: 'sc/recipes'

change main.js
	
  if (Cookbook.localMode) {
    Cookbook.server.preload(Cookbook.FIXTURES) ;
  } else {
    Cookbook.server.listFor({ recordType: Cookbook.Recipe });
  }

add to sc-config
	proxy '/sc', :url => "", :to => 'localhost:3000'

restart sc-server

check the SC logs and the Rails server logs

then at the consle type
Cookbook.Recipe.findAll().inspect()
Cookbook.Recipe.find(####).get('name')
Cookbook.Recipe.find(####).get('name')

sc-gen controller cookbook/recipe_master SC.CollectionController

add to main.js
	var recipes = Cookbook.Recipe.collection();
	Cookbook.recipeMasterController.set('content',recipes);
	recipes.refresh();

reload browser, then
Cookbook.recipeMasterController.get('arrangedObjects').inspect()

- Rails auth token
- computed property for time display 
- unit tests
- load screen